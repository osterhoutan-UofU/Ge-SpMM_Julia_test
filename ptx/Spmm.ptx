// PTX CompilerJob of kernel SpMM(CuDeviceVector{Int32, 1}, CuDeviceVector{Int32, 1}, CuDeviceVector{Float64, 1}, CuDeviceMatrix{Float64, 1}, CuDeviceMatrix{Float64, 1}) for sm_61

//
// Generated by LLVM NVPTX Back-End
//

.version 6.3
.target sm_61
.address_size 64

	// .globl	_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE // -- Begin function _Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE
.extern .func julia_throw_boundserror_2783
()
;
.extern .func julia_throw_boundserror_2786
()
;
.extern .func julia_throw_boundserror_2777
()
;
.extern .func  (.param .b64 func_retval0) julia_steprange_last_2795
(
	.param .b64 julia_steprange_last_2795_param_0,
	.param .b64 julia_steprange_last_2795_param_1,
	.param .b64 julia_steprange_last_2795_param_2
)
;
.extern .func julia_throw_boundserror_2780
()
;
.extern .func julia_throw_boundserror_2789
()
;
.extern .func gpu_report_exception_name
(
	.param .b64 gpu_report_exception_name_param_0
)
;
.extern .func gpu_signal_exception
()
;
.extern .func gpu_report_exception_frame
(
	.param .b32 gpu_report_exception_frame_param_0,
	.param .b64 gpu_report_exception_frame_param_1,
	.param .b64 gpu_report_exception_frame_param_2,
	.param .b32 gpu_report_exception_frame_param_3
)
;
// __static_shmem_327 has been demoted
// __static_shmem_328 has been demoted
.global .align 1 .b8 di_func56[4] = {114, 101, 109, 0};
.global .align 1 .b8 di_file57[9] = {46, 92, 105, 110, 116, 46, 106, 108, 0};
.global .align 1 .b8 exception107[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
.global .align 1 .b8 di_func116[5] = {83, 112, 77, 77, 0};
.global .align 1 .b8 di_file117[62] = {71, 58, 92, 77, 121, 32, 68, 114, 105, 118, 101, 92, 83, 99, 104, 111, 111, 108, 92, 85, 111, 102, 85, 92, 112, 114, 111, 106, 92, 67, 111, 109, 80, 97, 99, 116, 92, 115, 112, 97, 114, 115, 101, 45, 109, 97, 116, 114, 105, 120, 92, 71, 101, 45, 83, 112, 77, 77, 46, 106, 108, 0};
.weak .global .align 8 .u64 exception_flag;
                                        // @_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE
.visible .entry _Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE(
	.param .align 8 .b8 _Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_0[24],
	.param .align 8 .b8 _Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_1[24],
	.param .align 8 .b8 _Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_2[24],
	.param .align 8 .b8 _Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_3[32],
	.param .align 8 .b8 _Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_4[32]
)
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<24>;
	.reg .f64 	%fd<23>;
	.reg .b64 	%rd<121>;
	// demoted variable
	.shared .align 32 .b8 __static_shmem_327[4096];
	// demoted variable
	.shared .align 32 .b8 __static_shmem_328[8192];
// %bb.0:                               // %entry
	ld.param.u64 	%rd2, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_0+16];
	mov.u32 	%r7, WARP_SZ;
	mov.u32 	%r9, %ctaid.x;
	cvt.u64.u32 	%rd16, %r9;
	setp.eq.s32 	%p1, %r7, 0;
	@%p1 bra 	LBB0_1;
	bra.uni 	LBB0_31;
LBB0_1:                                 // %fail.i
	mov.u64 	%rd42, exception107;
	cvta.global.u64 	%rd43, %rd42;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd43;
	call.uni 
	gpu_report_exception_name, 
	(
	param0
	);
	} // callseq 0
	mov.u64 	%rd44, di_func56;
	cvta.global.u64 	%rd45, %rd44;
	mov.u64 	%rd46, di_file57;
	cvta.global.u64 	%rd47, %rd46;
	mov.u32 	%r10, 1;
	mov.u32 	%r11, 262;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r10;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd45;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd47;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r11;
	call.uni 
	gpu_report_exception_frame, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 1
	mov.u64 	%rd48, di_func116;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, di_file117;
	cvta.global.u64 	%rd51, %rd50;
	mov.u32 	%r12, 2;
	mov.u32 	%r13, 74;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd49;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd51;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r13;
	call.uni 
	gpu_report_exception_frame, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	call.uni 
	gpu_signal_exception, 
	(
	);
	} // callseq 3
	// begin inline asm
	trap;
	// end inline asm
LBB0_31:                                // %pass.i
	cvt.u64.u32 	%rd13, %r7;
	ld.param.u64 	%rd1, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_0];
	max.s64 	%rd41, %rd2, 0;
	setp.gt.s64 	%p2, %rd41, %rd16;
	@%p2 bra 	LBB0_32;
// %bb.2:                               // %L48.i
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_throw_boundserror_2777, 
	(
	);
	} // callseq 4
	// begin inline asm
	trap;
	// end inline asm
LBB0_32:                                // %L47.i
	mov.u32 	%r8, %tid.x;
	cvt.u32.u64 	%r15, %rd13;
	shl.b64 	%rd52, %rd16, 2;
	add.s64 	%rd17, %rd1, %rd52;
	ld.global.s32 	%rd118, [%rd17];
	add.s64 	%rd53, %rd16, 2;
	setp.gt.s64 	%p3, %rd53, %rd41;
	@%p3 bra 	LBB0_33;
	bra.uni 	LBB0_3;
LBB0_33:                                // %L70.i
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_throw_boundserror_2777, 
	(
	);
	} // callseq 5
	// begin inline asm
	trap;
	// end inline asm
LBB0_3:                                 // %L69.i
	cvt.u64.u32 	%rd14, %r8;
	ld.param.u64 	%rd11, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_4+16];
	ld.param.u64 	%rd12, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_4+24];
	ld.global.s32 	%rd19, [%rd17+4];
	add.s64 	%rd54, %rd19, -1;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd118;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd13;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd54;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_steprange_last_2795, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd55, [retval0+0];
	} // callseq 6
	setp.ne.s64 	%p4, %rd55, %rd118;
	setp.ne.s32 	%p5, %r15, 0;
	setp.gt.s64 	%p6, %rd55, %rd118;
	xor.pred  	%p7, %p5, %p6;
	and.pred  	%p8, %p4, %p7;
	mov.f64 	%fd21, 0d0000000000000000;
	@%p8 bra 	LBB0_28;
	bra.uni 	LBB0_4;
LBB0_28:                                // %L345.i
	ld.param.u64 	%rd10, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_4];
	max.s64 	%rd38, %rd11, 0;
	max.s64 	%rd111, %rd12, 0;
	setp.gt.s64 	%p29, %rd38, %rd16;
	setp.gt.s64 	%p30, %rd111, %rd14;
	and.pred  	%p31, %p29, %p30;
	@%p31 bra 	LBB0_30;
// %bb.29:                              // %L365.i
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_throw_boundserror_2789, 
	(
	);
	} // callseq 15
	// begin inline asm
	trap;
	// end inline asm
LBB0_30:                                // %_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE.inner.exit
	mul.lo.s64 	%rd112, %rd38, %rd14;
	add.s64 	%rd113, %rd112, %rd16;
	shl.b64 	%rd114, %rd113, 3;
	add.s64 	%rd115, %rd10, %rd114;
	st.global.f64 	[%rd115], %fd21;
	ret;
LBB0_4:                                 // %L107.i.preheader
	cvt.u32.u64 	%r14, %rd14;
	rem.u32 	%r16, %r14, %r15;
	add.s64 	%rd15, %rd14, 1;
	cvt.u64.u32 	%rd39, %r16;
	ld.param.u64 	%rd3, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_1];
	ld.param.u64 	%rd4, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_1+16];
	ld.param.u64 	%rd5, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_2];
	ld.param.u64 	%rd6, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_2+16];
	ld.param.u64 	%rd7, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_3];
	ld.param.u64 	%rd8, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_3+16];
	ld.param.u64 	%rd9, [_Z15julia_SpMM_273913CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_I7Float64Li1ELi1EES_IS1_Li2ELi1EES_IS1_Li2ELi1EE_param_3+24];
	sub.s64 	%rd40, %rd15, %rd39;
	setp.eq.s32 	%p9, %r15, 0;
	max.s64 	%rd21, %rd4, 0;
	shl.b64 	%rd56, %rd14, 2;
	mov.u64 	%rd57, __static_shmem_327;
	add.s64 	%rd22, %rd57, %rd56;
	max.s64 	%rd23, %rd6, 0;
	shl.b64 	%rd58, %rd14, 3;
	mov.u64 	%rd59, __static_shmem_328;
	add.s64 	%rd24, %rd59, %rd58;
	add.s64 	%rd60, %rd13, -1;
	selp.b64 	%rd25, -1, %rd60, %p9;
	max.s64 	%rd26, %rd8, 0;
	max.s64 	%rd27, %rd9, 0;
	mul.lo.s64 	%rd28, %rd26, %rd14;
	add.s64 	%rd29, %rd25, 1;
	mov.f64 	%fd21, 0d0000000000000000;
	setp.lt.s64 	%p17, %rd25, 0;
	mov.u32 	%r20, -1;
	setp.gt.s64 	%p18, %rd27, %rd14;
	bra.uni 	LBB0_5;
LBB0_27:                                // %L330.i
                                        //   in Loop: Header=BB0_5 Depth=1
	// begin inline asm
	bar.warp.sync %r20;  // ../Ge-SpMM.jl:87
	// end inline asm
	add.s64 	%rd118, %rd30, %rd13;
	setp.ne.s64 	%p28, %rd30, %rd55;
	@%p28 bra 	LBB0_5;
	bra.uni 	LBB0_28;
LBB0_5:                                 // %L107.i
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_12 Depth 2
                                        //     Child Loop BB0_16 Depth 2
	mov.u64 	%rd30, %rd118;
	add.s64 	%rd31, %rd30, %rd39;
	setp.ge.s64 	%p10, %rd31, %rd19;
	@%p10 bra 	LBB0_9;
// %bb.6:                               // %L114.i
                                        //   in Loop: Header=BB0_5 Depth=1
	setp.lt.s64 	%p11, %rd31, 1;
	setp.gt.s64 	%p12, %rd31, %rd21;
	or.pred  	%p13, %p11, %p12;
	@%p13 bra 	LBB0_34;
	bra.uni 	LBB0_7;
LBB0_34:                                // %L126.i
                                        //   in Loop: Header=BB0_5 Depth=1
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_throw_boundserror_2777, 
	(
	);
	} // callseq 7
	// begin inline asm
	trap;
	// end inline asm
LBB0_7:                                 // %L125.i
                                        //   in Loop: Header=BB0_5 Depth=1
	shl.b64 	%rd61, %rd31, 2;
	add.s64 	%rd62, %rd3, %rd61;
	ld.global.u32 	%r19, [%rd62+-4];
	st.shared.u32 	[%rd22], %r19;
	setp.gt.s64 	%p15, %rd31, %rd23;
	or.pred  	%p16, %p11, %p15;
	@%p16 bra 	LBB0_35;
	bra.uni 	LBB0_8;
LBB0_35:                                // %L166.i
                                        //   in Loop: Header=BB0_5 Depth=1
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_throw_boundserror_2783, 
	(
	);
	} // callseq 8
	// begin inline asm
	trap;
	// end inline asm
LBB0_8:                                 // %L165.i
                                        //   in Loop: Header=BB0_5 Depth=1
	shl.b64 	%rd63, %rd31, 3;
	add.s64 	%rd64, %rd5, %rd63;
	ld.global.u64 	%rd65, [%rd64+-8];
	st.shared.u64 	[%rd24], %rd65;
LBB0_9:                                 // %L195.i
                                        //   in Loop: Header=BB0_5 Depth=1
	// begin inline asm
	bar.warp.sync %r20;
	// end inline asm
	@%p17 bra 	LBB0_27;
// %bb.10:                              // %L210.i.preheader
                                        //   in Loop: Header=BB0_5 Depth=1
	sub.s64 	%rd117, %rd14, %rd39;
	@%p18 bra 	LBB0_15;
	bra.uni 	LBB0_11;
LBB0_15:                                // %L210.i.us.preheader
                                        //   in Loop: Header=BB0_5 Depth=1
	mov.u64 	%rd119, 0;
	bra.uni 	LBB0_16;
LBB0_22:                                // %L275.i.us
                                        //   in Loop: Header=BB0_16 Depth=2
	add.s64 	%rd108, %rd33, %rd28;
	shl.b64 	%rd109, %rd108, 3;
	add.s64 	%rd110, %rd7, %rd109;
	ld.global.f64 	%fd15, [%rd110+-8];
	fma.rn.f64 	%fd21, %fd3, %fd15, %fd21;
LBB0_23:                                // %L318.i.us
                                        //   in Loop: Header=BB0_16 Depth=2
	add.s64 	%rd119, %rd119, 1;
	setp.eq.s64 	%p27, %rd29, %rd119;
	@%p27 bra 	LBB0_27;
LBB0_16:                                // %L210.i.us
                                        //   Parent Loop BB0_5 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd90, %rd30, %rd119;
	setp.ge.s64 	%p22, %rd90, %rd19;
	@%p22 bra 	LBB0_23;
// %bb.17:                              // %L218.i.us
                                        //   in Loop: Header=BB0_16 Depth=2
	add.s64 	%rd91, %rd119, %rd40;
	add.s64 	%rd92, %rd91, -1;
	setp.gt.u64 	%p23, %rd92, 1023;
	@%p23 bra 	LBB0_19;
	bra.uni 	LBB0_18;
LBB0_19:                                // %L247.i.us
                                        //   in Loop: Header=BB0_16 Depth=2
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_throw_boundserror_2780, 
	(
	);
	} // callseq 12
	// begin inline asm
	trap;
	// end inline asm
	add.s64 	%rd99, %rd119, %rd117;
	shl.b64 	%rd100, %rd99, 2;
	add.s64 	%rd102, %rd100, %rd57;
	ld.shared.u32 	%r22, [%rd102];
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_throw_boundserror_2786, 
	(
	);
	} // callseq 13
	// begin inline asm
	trap;
	// end inline asm
	bra.uni 	LBB0_20;
LBB0_18:                                // %L227.i.us
                                        //   in Loop: Header=BB0_16 Depth=2
	add.s64 	%rd94, %rd119, %rd117;
	shl.b64 	%rd95, %rd94, 2;
	add.s64 	%rd97, %rd95, %rd57;
	ld.shared.u32 	%r22, [%rd97];
LBB0_20:                                // %L246.i.us
                                        //   in Loop: Header=BB0_16 Depth=2
	add.s64 	%rd104, %rd119, %rd117;
	shl.b64 	%rd105, %rd104, 3;
	add.s64 	%rd107, %rd105, %rd59;
	ld.shared.f64 	%fd3, [%rd107];
	cvt.s64.s32 	%rd33, %r22;
	setp.gt.s32 	%p24, %r22, 0;
	setp.ge.s64 	%p25, %rd26, %rd33;
	and.pred  	%p26, %p24, %p25;
	@%p26 bra 	LBB0_22;
// %bb.21:                              // %L276.i.us
                                        //   in Loop: Header=BB0_16 Depth=2
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_throw_boundserror_2789, 
	(
	);
	} // callseq 14
	// begin inline asm
	trap;
	// end inline asm
	bra.uni 	LBB0_22;
LBB0_11:                                // %L210.i.preheader53
                                        //   in Loop: Header=BB0_5 Depth=1
	mov.u64 	%rd120, 0;
	bra.uni 	LBB0_12;
LBB0_24:                                // %L247.i
                                        //   in Loop: Header=BB0_12 Depth=2
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_throw_boundserror_2780, 
	(
	);
	} // callseq 9
	// begin inline asm
	trap;
	// end inline asm
	add.s64 	%rd76, %rd120, %rd117;
	shl.b64 	%rd77, %rd76, 2;
	add.s64 	%rd79, %rd77, %rd57;
	ld.shared.u32 	%r23, [%rd79];
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_throw_boundserror_2786, 
	(
	);
	} // callseq 10
	// begin inline asm
	trap;
	// end inline asm
LBB0_25:                                // %L275.i
                                        //   in Loop: Header=BB0_12 Depth=2
	add.s64 	%rd81, %rd120, %rd117;
	shl.b64 	%rd82, %rd81, 3;
	add.s64 	%rd84, %rd82, %rd59;
	ld.shared.f64 	%fd13, [%rd84];
	cvt.s64.s32 	%rd85, %r23;
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_throw_boundserror_2789, 
	(
	);
	} // callseq 11
	// begin inline asm
	trap;
	// end inline asm
	add.s64 	%rd86, %rd85, %rd28;
	shl.b64 	%rd87, %rd86, 3;
	add.s64 	%rd88, %rd7, %rd87;
	ld.global.f64 	%fd14, [%rd88+-8];
	fma.rn.f64 	%fd21, %fd13, %fd14, %fd21;
LBB0_26:                                // %L318.i
                                        //   in Loop: Header=BB0_12 Depth=2
	add.s64 	%rd120, %rd120, 1;
	setp.ne.s64 	%p21, %rd29, %rd120;
	@%p21 bra 	LBB0_12;
	bra.uni 	LBB0_27;
LBB0_12:                                // %L210.i
                                        //   Parent Loop BB0_5 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd67, %rd30, %rd120;
	setp.ge.s64 	%p19, %rd67, %rd19;
	@%p19 bra 	LBB0_26;
// %bb.13:                              // %L218.i
                                        //   in Loop: Header=BB0_12 Depth=2
	add.s64 	%rd68, %rd120, %rd40;
	add.s64 	%rd69, %rd68, -1;
	setp.gt.u64 	%p20, %rd69, 1023;
	@%p20 bra 	LBB0_24;
// %bb.14:                              // %L227.i
                                        //   in Loop: Header=BB0_12 Depth=2
	add.s64 	%rd71, %rd120, %rd117;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd74, %rd72, %rd57;
	ld.shared.u32 	%r23, [%rd74];
	bra.uni 	LBB0_25;
                                        // -- End function
}
